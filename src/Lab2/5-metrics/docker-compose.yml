services:
  ############################
  # Frontend
  ############################
  command-frontend:
    image: dockerutils/command-frontend
    ports:
      - "8089:80"
    environment:
      - COMMAND_API_HOST=command-api

  ############################
  # Command API
  ############################
  command-api:
    image: dockerutils/command-api
    expose:
      - 9090
    environment: 
     - PUB_URL=http://localhost:3500/v1.0/publish/order-pub-sub/orders
  command-api-dapr:
    image: "daprio/daprd:edge"
    command: ["./daprd",
     "-app-id", "command-api",
     "-app-port", "80",
     "-log-level", "warn",
     "-config", "/config/tracing-config.yml",
     "-components-path", "/components"]
    volumes:
        - "./components/:/components"
        - "./config/:/config"
    network_mode: "service:command-api"


  ############################
  # Order Processing
  ############################
  order-processing:
    image: dockerutils/order-processing
    expose:
      - 9090
    environment:
      - STOCK_MANAGER_INVOKE_URL=http://localhost:3500/v1.0/invoke/stock-manager/method/stock
      - RECEIPT_GEN_INVOKE_URL=http://localhost:3500/v1.0/invoke/receipt-generator/method/
  order-processing-dapr:
    image: "daprio/daprd:edge"
    command: ["./daprd",
     "-app-id", "order-processing",
     "-app-port", "8080",
     "-config", "/config/tracing-config.yml",
     "-log-level", "warn",
     "-components-path", "/components"]
    volumes:
        - "./components/:/components"
        - "./config/:/config"
    network_mode: "service:order-processing"


  ############################
  # Stock Manager
  ############################
  stock-manager:
    image: dockerutils/stock-manager
    expose:
      - 9090
  stock-manager-dapr:
    image: "daprio/daprd:edge"
    command: ["./daprd",
     "-app-id", "stock-manager",
     "-app-port", "8081",
     "-log-level", "warn",
     "-config", "/config/tracing-config.yml",
     "-components-path", "/components"]
    volumes:
        - "./components/:/components"
        - "./config/:/config"
    network_mode: "service:stock-manager"


  ############################
  # Receipt Generator
  ############################
  receipt-generator:
    image: dockerutils/receipt-generator
    expose:
      - 9090
    environment:
      - RUST_LOG=debug
      - MAIL_TO=
      - MAILING_BINDING_URL=http://localhost:3500/v1.0/bindings/mail
  receipt-generator-dapr:
    image: "daprio/daprd:edge"
    command: ["./daprd",
     "-app-id", "receipt-generator",
     "-app-port", "8081",
     "-log-level", "warn",
     "-config", "/config/tracing-config.yml",
     "-components-path", "/components"]
    volumes:
        - "./components/:/components"
        - "./config/:/config"
    network_mode: "service:receipt-generator"

  ############################
  # Zipkin
  ############################
  zipkin:
    image: openzipkin/zipkin
    environment:
      - TZ=CET
    ports:
      - 9415:9411

  ############################
  # Prometheus
  ############################
  prometheus:
    image: prom/prometheus
    environment:
      - TZ=CET
    # Mount the "prometheus" dir in the container path "/config"
    volumes:
    - "./prometheus/:/config"
    # Adding somme cmd switches
    command:
    - '--config.file=/config/config.yml'
    - '--web.listen-address=:9416'
    ports:
      - 9416:9416

  ############################
  # Grafana
  ############################
  grafana:
    image: grafana/grafana-oss
    environment:
      - TZ=CET
    volumes:
    - "./grafana/config/grafana.ini:/etc/grafana/grafana.ini"
    - "./grafana/datasources:/etc/grafana/provisioning/datasources"
    - "./grafana/dashboards:/etc/grafana/provisioning/dashboards/"
    ports:
      - 9417:3000

  ############################
  # Redis state stores
  ############################
  redis:
    image: "redis:alpine"